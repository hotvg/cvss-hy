<?xml version="1.0" encoding="utf-8"?> 
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>
	<!-- 改变mybatis运行时行为配置 -->
	<settings>
		<!-- 该配置影响的所有映射器中配置的缓存的全局开关 -->
		<setting name="cacheEnabled" value="true" />
		<!-- 延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。 特定关联关系中可通过设置fetchType属性来覆盖该项的开关状态 -->
		<setting name="lazyLoadingEnabled" value="true" />
		<!-- 是否允许单一语句返回多结果集（需要兼容驱动） -->
		<setting name="multipleResultSetsEnabled" value="true" />
		<!-- 使用列标签代替列名 -->
		<setting name="useColumnLabel" value="true" />
		<!-- 允许 JDBC 支持自动生成主键，需要驱动兼容。 如果设置为 true 则这个设置强制使用自动生成主键 -->
		<setting name="useGeneratedKeys" value="false" />
		<!-- 指定 MyBatis 应如何自动映射列到字段或属性。 NONE 表示取消自动映射；PARTIAL 只会自动映射没有定义嵌套结果集映射的结果集。 
			FULL 会自动映射任意复杂的结果集（无论是否嵌套） -->
		<setting name="autoMappingBehavior" value="PARTIAL" />
		<!-- 配置默认的执行器。SIMPLE 就是普通的执行器；REUSE 执行器会重用预处理语句（prepared statements）； BATCH 
			执行器将重用语句并执行批量更新 -->
		<setting name="defaultExecutorType" value="SIMPLE" />
		<!-- 设置超时时间，它决定驱动等待数据库响应的秒数 -->
		<setting name="defaultStatementTimeout" value="25" />
		<!-- 允许在嵌套语句中使用分页（RowBounds）。 If allow, set the false. -->
		<setting name="safeRowBoundsEnabled" value="false" />
		<!-- 是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN 到经典 Java 属性名 aColumn 
			的类似映射 -->
		<setting name="mapUnderscoreToCamelCase" value="false" />
		<!-- MyBatis 利用本地缓存机制（Local Cache）防止循环引用（circular references）和加速重复嵌套查询。 
			默认值为 SESSION，这种情况下会缓存一个会话中执行的所有查询。 若设置值为 STATEMENT，本地会话仅用在语句执行上，对相同 SqlSession 
			的不同调用将不会共享数据 -->
		<setting name="localCacheScope" value="SESSION" />
		<!-- 当没有为参数提供特定的 JDBC 类型时，为空值指定 JDBC 类型。 某些驱动需要指定列的 JDBC 类型，多数情况直接用一般类型即可，比如 
			NULL、VARCHAR 或 OTHER -->
		<setting name="jdbcTypeForNull" value="OTHER" />
		<!-- 指定哪个对象的方法触发一次延迟加载 -->
		<setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString" />
	</settings>
	<!-- 类型别名，用于减少类完全限定名的冗余 -->
	<typeAliases>
		<!--<typeAlias alias="User" type="com.hotvg.pojo.User" />-->
		<!--<typeAlias alias="UserInfo" type="com.hotvg.pojo.UserInfo" />-->
		<package name="com.cvss.pojo" />
	</typeAliases>
	<!-- 无论是 MyBatis 在预处理语句（PreparedStatement）中设置一个参数时，还是从结果集中取出一个值时， 都会用类型处理器将获取的值以合适的方式转换成 
		Java 类型 -->
	<!-- 类型转制配置 -->
	<!-- <typeHandlers> <typeHandler handler="org.mybatis.example.ExampleTypeHandler" 
		/> </typeHandlers> -->

	<!-- 映射器：用于映射sql语句的文件 当spring-common.xml中配置了的时候，这里不再配置，否则会出错 -->
	<!-- <mappers> <mapper resource="com/hotvg/mapper/UserInfoMapper.xml" /> 
		<mapper resource="com/hotvg/mapper/UserMapper.xml" /> </mappers> -->

	<plugins>
		<!-- 配置分页插件 -->
		<plugin interceptor="com.github.pagehelper.PageHelper">
			<!-- 设置数据库类型 Oracle,Mysql,MariaDB,SQLite,Hsqldb,PostgreSQL六种数据库 -->
			<property name="dialect" value="mysql" />
		</plugin>
	</plugins>

</configuration>